#!/usr/bin/env python3
"""
ResaleX - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã
"""

import requests
import time
import sys
from urllib.parse import urljoin

BASE_URL = "http://localhost:5000"

def test_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é"""
    try:
        response = requests.get(BASE_URL, timeout=5)
        if response.status_code == 200:
            print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ")
            return True
        else:
            print(f"‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é: {e}")
        return False

def test_pages():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü"""
    pages = [
        ("/", "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        ("/login", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞"),
        ("/products", "–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤"),
    ]
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü:")
    for url, name in pages:
        try:
            response = requests.get(urljoin(BASE_URL, url), timeout=5)
            if response.status_code == 200:
                print(f"‚úÖ {name}: OK")
            else:
                print(f"‚ùå {name}: HTTP {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"‚ùå {name}: {e}")

def test_login():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"""
    print("\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞:")
    
    # –¢–µ—Å—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    login_data = {
        'username': 'root',
        'password': 'admin123'
    }
    
    try:
        session = requests.Session()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
        login_page = session.get(urljoin(BASE_URL, '/login'))
        if login_page.status_code != 200:
            print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞")
            return False
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
        response = session.post(urljoin(BASE_URL, '/login'), data=login_data, allow_redirects=False)
        
        if response.status_code == 302:  # –†–µ–¥–∏—Ä–µ–∫—Ç –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
            print("‚úÖ –í—Ö–æ–¥ root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: OK")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –¥–∞—à–±–æ—Ä–¥—É
            dashboard = session.get(urljoin(BASE_URL, '/dashboard'))
            if dashboard.status_code == 200:
                print("‚úÖ –î–æ—Å—Ç—É–ø –∫ –¥–∞—à–±–æ—Ä–¥—É: OK")
                return True
            else:
                print("‚ùå –î–æ—Å—Ç—É–ø –∫ –¥–∞—à–±–æ—Ä–¥—É: FAILED")
                return False
        else:
            print("‚ùå –í—Ö–æ–¥ root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: FAILED")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—Ö–æ–¥–∞: {e}")
        return False

def test_database():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    
    try:
        from app import app, db, User
        with app.app_context():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
            user_count = User.query.count()
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î: OK (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_count})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            root_user = User.query.filter_by(username='root').first()
            if root_user:
                print("‚úÖ Root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: OK")
            else:
                print("‚ùå Root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
                
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
        return False

def test_stripe_config():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Stripe"""
    print("\nüí≥ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Stripe:")
    
    try:
        from app import app
        with app.app_context():
            stripe_key = app.config.get('STRIPE_SECRET_KEY')
            if stripe_key and stripe_key != 'sk_test_your_stripe_key':
                print("‚úÖ Stripe –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω: OK")
                return True
            else:
                print("‚ö†Ô∏è Stripe –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–ª—é—á–∏)")
                return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Stripe: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ResaleX...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if not test_connection():
        print("\n‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python run.py")
        sys.exit(1)
    
    # –¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü
    test_pages()
    
    # –¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if not test_database():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö!")
        sys.exit(1)
    
    # –¢–µ—Å—Ç –≤—Ö–æ–¥–∞
    if not test_login():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π!")
        sys.exit(1)
    
    # –¢–µ—Å—Ç Stripe
    test_stripe_config()
    
    print("\n" + "=" * 50)
    print("üéâ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ root (root / admin123)")
    print("3. –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π")
    print("4. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–∫—É–ø–∫–∏")
    print("\nüöÄ ResaleX –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == '__main__':
    main()
