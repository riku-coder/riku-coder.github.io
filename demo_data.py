#!/usr/bin/env python3
"""
ResaleX - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
"""

from app import app, db, User, Product, Order
from datetime import datetime, timedelta
import random

def create_demo_users():
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    users_data = [
        {'username': 'admin', 'email': 'admin@resalex.com', 'role': 'admin'},
        {'username': 'moderator1', 'email': 'moderator@resalex.com', 'role': 'moderator'},
        {'username': 'seller1', 'email': 'seller1@resalex.com', 'role': 'seller'},
        {'username': 'seller2', 'email': 'seller2@resalex.com', 'role': 'seller'},
        {'username': 'buyer1', 'email': 'buyer1@resalex.com', 'role': 'user'},
        {'username': 'buyer2', 'email': 'buyer2@resalex.com', 'role': 'user'},
    ]
    
    for user_data in users_data:
        if not User.query.filter_by(username=user_data['username']).first():
            user = User(
                username=user_data['username'],
                email=user_data['email'],
                role=user_data['role']
            )
            user.set_password('password123')
            db.session.add(user)
    
    db.session.commit()
    print("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã")

def create_demo_products():
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã"""
    sellers = User.query.filter_by(role='seller').all()
    if not sellers:
        print("‚ùå –ù–µ—Ç –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤")
        return
    
    products_data = [
        {
            'name': 'Air Jordan 1 Retro High OG',
            'brand': 'Nike',
            'category': 'sneakers',
            'condition': 'new',
            'size': 'US 9',
            'price': 180.00,
            'description': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ Air Jordan 1 –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º–µ. –ù–æ–≤—ã–µ, —Å –±–∏—Ä–∫–∞–º–∏.'
        },
        {
            'name': 'Yeezy Boost 350 V2',
            'brand': 'Adidas',
            'category': 'sneakers',
            'condition': 'like_new',
            'size': 'US 10',
            'price': 220.00,
            'description': '–ü–æ–ø—É–ª—è—Ä–Ω–∞—è –º–æ–¥–µ–ª—å Yeezy –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –ù–æ—Å–∏–ª–∏ –≤—Å–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑.'
        },
        {
            'name': 'Supreme Box Logo Hoodie',
            'brand': 'Supreme',
            'category': 'clothing',
            'condition': 'good',
            'size': 'L',
            'price': 450.00,
            'description': '–ö—É–ª—å—Ç–æ–≤–∞—è —Ç–æ–ª—Å—Ç–æ–≤–∫–∞ Supreme —Å –±–æ–∫—Å-–ª–æ–≥–æ—Ç–∏–ø–æ–º. –í —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.'
        },
        {
            'name': 'Off-White x Nike Air Presto',
            'brand': 'Nike',
            'category': 'sneakers',
            'condition': 'new',
            'size': 'US 8.5',
            'price': 320.00,
            'description': '–ö–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏—è Off-White –∏ Nike. –ù–æ–≤—ã–µ, –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–µ.'
        },
        {
            'name': 'Travis Scott x Air Jordan 1',
            'brand': 'Nike',
            'category': 'sneakers',
            'condition': 'like_new',
            'size': 'US 9.5',
            'price': 1200.00,
            'description': '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏—è —Å Travis Scott. –û—á–µ–Ω—å —Ä–µ–¥–∫–∏–µ.'
        },
        {
            'name': 'Balenciaga Triple S',
            'brand': 'Balenciaga',
            'category': 'sneakers',
            'condition': 'good',
            'size': 'US 10.5',
            'price': 280.00,
            'description': '–°—Ç–∏–ª—å–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ Balenciaga. –í —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.'
        },
        {
            'name': 'Gucci GG Marmont Bag',
            'brand': 'Gucci',
            'category': 'accessories',
            'condition': 'like_new',
            'size': 'One Size',
            'price': 890.00,
            'description': '–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è —Å—É–º–∫–∞ Gucci. –ù–æ—Å–∏–ª–∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ, –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.'
        },
        {
            'name': 'iPhone 14 Pro Max',
            'brand': 'Apple',
            'category': 'electronics',
            'condition': 'new',
            'size': '256GB',
            'price': 1100.00,
            'description': '–ù–æ–≤—ã–π iPhone 14 Pro Max –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–µ. –ó–∞–ø–µ—á–∞—Ç–∞–Ω.'
        }
    ]
    
    for product_data in products_data:
        if not Product.query.filter_by(name=product_data['name']).first():
            product = Product(
                name=product_data['name'],
                brand=product_data['brand'],
                category=product_data['category'],
                condition=product_data['condition'],
                size=product_data['size'],
                price=product_data['price'],
                description=product_data['description'],
                seller_id=random.choice(sellers).id,
                status='approved'  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–¥–æ–±—Ä—è–µ–º –¥–ª—è –¥–µ–º–æ
            )
            db.session.add(product)
    
    db.session.commit()
    print("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Å–æ–∑–¥–∞–Ω—ã")

def create_demo_orders():
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã"""
    buyers = User.query.filter_by(role='user').all()
    products = Product.query.filter_by(status='approved').all()
    
    if not buyers or not products:
        print("‚ùå –ù–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –∏–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤")
        return
    
    orders_data = [
        {'status': 'delivered', 'days_ago': 5},
        {'status': 'shipped', 'days_ago': 2},
        {'status': 'paid', 'days_ago': 1},
        {'status': 'pending', 'days_ago': 0},
    ]
    
    for order_data in orders_data:
        product = random.choice(products)
        buyer = random.choice(buyers)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–¥–∞–≤—Ü–æ–º —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        if buyer.id != product.seller_id:
            order = Order(
                buyer_id=buyer.id,
                product_id=product.id,
                total_amount=product.price,
                status=order_data['status'],
                created_at=datetime.utcnow() - timedelta(days=order_data['days_ago'])
            )
            
            if order_data['status'] == 'shipped':
                order.tracking_number = f"TR{random.randint(100000, 999999)}"
            
            db.session.add(order)
    
    db.session.commit()
    print("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã —Å–æ–∑–¥–∞–Ω—ã")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö"""
    print("üé≠ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ResaleX...")
    
    with app.app_context():
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        create_demo_users()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã
        create_demo_products()
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑—ã
        create_demo_orders()
        
        print("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        print("\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:")
        print("   Root: root / admin123")
        print("   Admin: admin / password123")
        print("   Moderator: moderator1 / password123")
        print("   Seller: seller1 / password123")
        print("   Buyer: buyer1 / password123")
        print("\nüöÄ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏!")

if __name__ == '__main__':
    main()
